program = _{ SOI ~ "\n"* ~ (stmt ~ "\n"+) * ~ stmt? ~ EOI }

stmt = {
      funcDec
      // | fnCall
      | assignStmt
      | returnStmt
      | expr
}
expr = {
      arithmetic
      | not_arithmetic
}

not_arithmetic = _{
      fnCall
      | literal
      | ident
}

infixOp = { "+" | "-" | "**" | "/" | "%" | "<<" | ">>" | "&" | "|" | "^" | "*" }
arithmetic = { not_arithmetic ~ (infixOp ~ not_arithmetic)+ }

assignStmt = { "let" ~ ident ~ "=" ~ expr }
returnStmt = { "return" ~ expr }

argsList = {expr ~ ("," ~ expr)* }
fnCall = { ident ~ "(" ~ argsList? ~ ")" }

literal = _{ integer | decimal | string }

// TODO support anonymous fn
funcDecArgsList = {ident ~ ("," ~ ident)* }
funcBody = { (stmt ~ crlf?)* }
funcDec = { "fn" ~ ident ~ "(" ~ funcDecArgsList? ~ ")" ~ crlf* ~ funcBody ~ crlf* ~ "end" }

integer = @{ "_"? ~ ASCII_DIGIT+ }
decimal = @{ "_"? ~ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT* }

reserved_words = _{ "fn" | "let" | "end" | "+" | "-" | "*" | "/" | "%" | "<<" | ">>" | "&" | "|" | "^" | "**"}
ident = @{ !reserved_words ~ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }

/* TODO: support double quoted strings */
string = @{ "'" ~ ( "''" | (!"'" ~ ANY) )* ~ "'" }

crlf = _{ "\r" | "\n" }
WHITESPACE = _{ " " | "\t" } // | "\r" | "\n" }

// TODO: multiline comments
COMMENT = _{ "#" ~ (!"\n" ~ ANY)* } // | ("/*" ~ ANY* ~ "*/") }